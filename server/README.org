* 服务器端简介
  采用短链接的方式,每次客户端向服务器发送Http请求,都要验证用户和密码
  (可能将来会加入token的方式验证)

  不同的API需要的权限不同,权限记录在用户表中
  - 权限0:代表最高,可以使用所有API
  - 权限1:代表库房人员,可以查询和修改商品记录等
  - 权限2:代表前台人员,只有少量可用

* API
  所有的URL都要加上前缀
  : http://[host:port]/
  host是主机,port是端口,待定
** 客户端登陆检查API
   | URL             | 方法 | 权限要求 | 返回     | 描述                 |
   |-----------------+------+----------+----------+----------------------|
   | /Mart/v1.0/auth | GET  | -------- | 权限等级 | 为客户端提供登陆检查 |
** 商品信息相关API
   输入数据的格式在 [[file:product.example.json][product.example.json]] 中描述
   | URL                           | 方法 | 权限要求 | 返回                     | 描述               |
   |-------------------------------+------+----------+--------------------------+--------------------|
   | /Mart/v1.0/product/add        | POST |        1 | 字符串'Success'          | 增加多条商品信息   |
   | /Mart/v1.0/product/update     | POST |        1 | 字符串'Success'          | 更新多条商品信息   |
   | /Mart/v1.0/product/get        | GET  |        2 | 格式和输入一致的商品记录 | 获取所有商品信息   |
   | /Mart/v1.0/product/get/<name> | GET  |        2 | 格式和输入一致的商品记录 | 获取指定名字的商品 |

** 出入库相关API
   输入数据格式在 [[file:inventory.example.json][inventory.example.json]] 中描述
   | URL                        | 方法 | 权限要求 | 返回                     | 描述               |
   |----------------------------+------+----------+--------------------------+--------------------|
   | /Mart/v1.0/inventory/add   | POST |        1 | 字符串'Success'          | 增加多条出入库记录 |
   | /Mart/v1.0/inventory/get   | GET  |        0 | 格式和输入一致出入库记录 | 获取所有记录       |
   | /Mart/v1.0/inventory/count | GET  |        1 | 一个字典                 | 所有商品的数量     |

   | URL                        | 方法 | 权限要求 | 返回                                         | 描述               |
   |----------------------------+------+----------+----------------------------------------------+--------------------|
   | /Mart/v1.0/inventory/add   | POST |        1 | 字符串'Success'                              | 增加多条出入库记录 |
   | /Mart/v1.0/inventory/get   | GET  |        0 | 格式和输入一致出入库记录                     | 获取所有记录       |
   | /Mart/v1.0/inventory/count | GET  |        1 | json 数组, 每个元素格式 id: { "count": num } | 获取库存           |


** 交易记录
   输入数据格式在 [[file:sale.example.json][sale.example.json]] 中描述
   | URL                                  | 方法 | 权限要求 | 返回                                                                | 描述                                                                                                        |
   |--------------------------------------+------+----------+---------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------|
   | /Mart/v1.0/sale/add                  | POST |        1 | 字符串'Success'                                                     | 增加一条交易记录                                                                                            |
   | /Mart/v1.0/sale/get?orderby_date=... | GET  |        1 | 格式为一个列表每个列表代表一个记录 [ {"date":...,"detail""[...]"} ] | (输入一个json,必须有start字段,end可选)查询时间间隔内订单, ordervy_date 有3个值:'inc','desc'和'None'(或不写) |
   
* Requirements
  : python2-flask
  : python2-flask-sqlalchemy
  : python2-mysql-connector
